"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateacfun_evolved"]("AcFun_Evolved",{

/***/ "./src/core/api/PluginToolkit.ts":
/*!***************************************!*\
  !*** ./src/core/api/PluginToolkit.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Preferences__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Preferences */ \"./src/core/api/Preferences.ts\");\n/* harmony import */ var _Security__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Security */ \"./src/core/api/Security.ts\");\n/* harmony import */ var _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plugins/ACEV2Toast */ \"./src/plugins/ACEV2Toast.ts\");\n/* harmony import */ var _plugins_ACEV2Dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../plugins/ACEV2Dialog */ \"./src/plugins/ACEV2Dialog.ts\");\n/* harmony import */ var _I18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./I18n */ \"./src/core/api/I18n.ts\");\n/* harmony import */ var _services_ACEV2Storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/ACEV2Storage */ \"./src/core/services/ACEV2Storage.ts\");\n/* harmony import */ var _plugins_ACEV2Loader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plugins/ACEV2Loader */ \"./src/plugins/ACEV2Loader.ts\");\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Logger */ \"./src/core/api/Logger.ts\");\n/* harmony import */ var _ACEV2URL__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ACEV2URL */ \"./src/core/api/ACEV2URL.ts\");\n/* harmony import */ var _Supervisor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Supervisor */ \"./src/core/api/Supervisor.ts\");\n/* harmony import */ var _plugins_PluginStore__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../plugins/PluginStore */ \"./src/plugins/PluginStore.ts\");\n/* harmony import */ var _plugins_DebugBridge__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../plugins/DebugBridge */ \"./src/plugins/DebugBridge.ts\");\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! pako */ \"./node_modules/pako/dist/pako.esm.mjs\");\n/* harmony import */ var untar_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! untar.js */ \"./node_modules/untar.js/lib/untar.js\");\n/* harmony import */ var _ACEV2DOM__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ACEV2DOM */ \"./src/core/api/ACEV2DOM.ts\");\n/* harmony import */ var _Variable__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Variable */ \"./src/core/api/Variable.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar PluginToolkit = /** @class */ (function () {\n    function PluginToolkit() {\n        this.tombstones = [];\n        this.apiImplementations = {\n            showDialog: function (_a) {\n                var title = _a.title, content = _a.content, okAction = _a.okAction, cancelAction = _a.cancelAction;\n                return _plugins_ACEV2Dialog__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog({ title: title, content: content, okAction: okAction, cancelAction: cancelAction });\n            },\n            showToast: function (_a) {\n                var text = _a.text;\n                return _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: text });\n            },\n            aceLog: {\n                info: function (_a) {\n                    var message = _a.message;\n                    return _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].info({ message: message });\n                },\n                success: function (_a) {\n                    var message = _a.message;\n                    return _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].success({ message: message });\n                },\n                warn: function (_a) {\n                    var message = _a.message;\n                    return _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].warn({ message: message });\n                },\n                error: function (_a) {\n                    var message = _a.message;\n                    return _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error({ message: message });\n                }\n            },\n            isDarkMode: function () { return _Preferences__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDarkMode(); },\n            ACEV2DOM: {\n                injectHTML: function (_a) {\n                    var HTMLCode = _a.HTMLCode;\n                    return _ACEV2DOM__WEBPACK_IMPORTED_MODULE_14__[\"default\"].injectHTML({ HTMLCode: HTMLCode });\n                },\n                removeHTML: function (_a) {\n                    var tracker = _a.tracker;\n                    return _ACEV2DOM__WEBPACK_IMPORTED_MODULE_14__[\"default\"].removeElement({ tracker: tracker });\n                }\n            }\n        };\n    }\n    PluginToolkit.prototype.installPlugin = function (_a) {\n        return __awaiter(this, arguments, void 0, function (_b) {\n            var psvResult, e_1, installedPlugins, existingPluginIndex, installedPlugins;\n            var pluginPack = _b.pluginPack, bridged = _b.bridged;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        psvResult = false;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 5, , 6]);\n                        if (!(_Preferences__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPreference({ category: 'developer', k: 'psv' }) !== 'none')) return [3 /*break*/, 3];\n                        return [4 /*yield*/, _Security__WEBPACK_IMPORTED_MODULE_1__[\"default\"].psv({ signature: pluginPack.signature, pluginSelf: pluginPack.self })];\n                    case 2:\n                        psvResult = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        psvResult = true;\n                        _c.label = 4;\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        e_1 = _c.sent();\n                        _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'psv-check-failed-installation-denied' }) });\n                        return [3 /*break*/, 6];\n                    case 6:\n                        if (!psvResult) {\n                            _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: \"\\u5B89\\u88C5\\u88AB\\u62D2\\u7EDD, \\u6B64\\u63D2\\u4EF6\\u300C\".concat(pluginPack.manifest.id, \"\\u300D\\u672A\\u901A\\u8FC7PSV\\u68C0\\u67E5\\u3002\") });\n                            return [2 /*return*/];\n                        }\n                        if (this.checkIfInstalled({ pluginPack: pluginPack })) {\n                            _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: \"\\u5B89\\u88C5\\u88AB\\u62D2\\u7EDD, \\u6B64\\u63D2\\u4EF6\\u300C\".concat(pluginPack.manifest.id, \"\\u300D\\u5DF2\\u7ECF\\u5B89\\u88C5\\u3002\") });\n                            return [2 /*return*/];\n                        }\n                        if (bridged) {\n                            installedPlugins = this.getInstalledPlugins();\n                            pluginPack.enabled = true;\n                            pluginPack.manifest.bridged = true;\n                            existingPluginIndex = installedPlugins.findIndex(function (plugin) { return plugin.manifest.id === pluginPack.manifest.id; });\n                            if (existingPluginIndex !== -1) {\n                                installedPlugins[existingPluginIndex] = pluginPack;\n                            }\n                            else {\n                                installedPlugins.push(pluginPack);\n                            }\n                            this.saveInstalledPlugins({ installedPlugins: installedPlugins });\n                        }\n                        else {\n                            installedPlugins = this.getInstalledPlugins();\n                            pluginPack.enabled = true;\n                            installedPlugins.push(pluginPack);\n                            this.saveInstalledPlugins({ installedPlugins: installedPlugins });\n                            _plugins_ACEV2Dialog__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog({\n                                title: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'installation-succeed' }),\n                                content: \"\\u6B64\\u63D2\\u4EF6\\u300C\".concat(pluginPack.manifest.id, \"\\u300D\\u5DF2\\u88AB\\u5B89\\u88C5\\uFF0C\\u6309\\u4E0B\\u300C\\u597D\\u300D\\u540E\\u5C06\\u5237\\u65B0\\u9875\\u9762\\u4EE5\\u8F7D\\u5165\\u63D2\\u4EF6\\u3002\"),\n                                okAction: function () {\n                                    location.reload();\n                                }\n                            });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PluginToolkit.prototype.uninstallPlugin = function (_a) {\n        var manifest = _a.manifest;\n        var id = manifest.id;\n        _plugins_ACEV2Loader__WEBPACK_IMPORTED_MODULE_6__[\"default\"].draw();\n        try {\n            var installedPlugins = this.getInstalledPlugins();\n            var newInstalledPlugins = installedPlugins.filter(function (installedPlugin) { return installedPlugin.manifest.id !== id; });\n            this.saveInstalledPlugins({ installedPlugins: newInstalledPlugins });\n            _plugins_ACEV2Dialog__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog({\n                title: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'uninstallation-succeed' }),\n                content: \"\\u63D2\\u4EF6\\u300C\".concat(id, \"\\u300D\\u5378\\u8F7D\\u5B8C\\u6210\\uFF0C\\u70B9\\u51FB\\u300C\\u597D\\u300D\\u4EE5\\u5237\\u65B0\\u9875\\u9762\\u3002\"),\n                okAction: function () { return location.reload(); }\n            });\n        }\n        catch (e) {\n            _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: \"\\u63D2\\u4EF6\\u89E3\\u9664\\u5B89\\u88C5\\u5931\\u8D25\\uFF0C\\u5728\\u5C1D\\u8BD5\\u89E3\\u9664\\u5B89\\u88C5\\u63D2\\u4EF6\\u300C\".concat(id, \"\\u300D\\u65F6\\u51FA\\u73B0\\u9519\\u8BEF\\uFF0C\\u8BF7\\u518D\\u8BD5\\u4E00\\u6B21\\u3002\") });\n            _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error({ message: JSON.stringify(e) });\n        }\n        _plugins_ACEV2Loader__WEBPACK_IMPORTED_MODULE_6__[\"default\"].destroy();\n    };\n    PluginToolkit.prototype.uninstallBridgedPlugin = function () {\n        var installedPlugins = this.getInstalledPlugins();\n        var bridgedPlugins = installedPlugins.filter(function (i) { return i.manifest.bridged === true; });\n        if (bridgedPlugins.length !== 0) {\n            var id_1 = bridgedPlugins[0].manifest.id;\n            if (id_1) {\n                try {\n                    var installedPlugins_1 = this.getInstalledPlugins();\n                    var newInstalledPlugins = installedPlugins_1.filter(function (installedPlugin) { return installedPlugin.manifest.id !== id_1; });\n                    this.saveInstalledPlugins({ installedPlugins: newInstalledPlugins });\n                    _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].success({ message: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'uninstalled-bridged-plugin' }) + id_1 });\n                    _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'uninstalled-bridged-plugin' }) + id_1 + _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'please-reload-page' }) });\n                }\n                catch (e) {\n                    _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'uninstall-bridged-plugin-failed' }) + id_1 + _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'please-try-again' }) });\n                    _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error({ message: JSON.stringify(e) });\n                }\n            }\n        }\n    };\n    PluginToolkit.prototype.checkIfInstalled = function (_a) {\n        var pluginPack = _a.pluginPack;\n        var installedPlugins = this.getInstalledPlugins();\n        var isInstalled = false;\n        installedPlugins.forEach(function (installedPlugin) {\n            if (installedPlugin.manifest.id === pluginPack.manifest.id) {\n                isInstalled = true;\n            }\n        });\n        return isInstalled;\n    };\n    PluginToolkit.prototype.getInstalledPlugins = function () {\n        var installedPlugins = _services_ACEV2Storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getPlugins();\n        if (!installedPlugins) {\n            installedPlugins = [];\n            this.saveInstalledPlugins({ installedPlugins: installedPlugins });\n        }\n        return installedPlugins;\n    };\n    PluginToolkit.prototype.saveInstalledPlugins = function (_a) {\n        var installedPlugins = _a.installedPlugins;\n        _services_ACEV2Storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].updatePluginsStorage({ newPlugins: installedPlugins });\n    };\n    PluginToolkit.prototype.getSelfPreference = function (_a) {\n        var manifest = _a.manifest;\n        var installedPlugins = this.getInstalledPlugins();\n        var targetPlugin = installedPlugins.find(function (installedPlugin) { return installedPlugin.manifest.id === manifest.id; });\n        return targetPlugin.manifest.settings;\n    };\n    PluginToolkit.prototype.saveSelfPreference = function (_a) {\n        var manifest = _a.manifest, settings = _a.settings;\n        var installedPlugins = this.getInstalledPlugins();\n        var targetPlugin = installedPlugins.find(function (installedPlugin) { return installedPlugin.manifest.id === manifest.id; });\n        targetPlugin.manifest.settings = settings;\n        this.saveInstalledPlugins({ installedPlugins: installedPlugins });\n    };\n    PluginToolkit.prototype.initializePluginExecutionAndSetTrigger = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var installedPlugins, __tombstones, _loop_1, _i, installedPlugins_2, installedPlugin;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        installedPlugins = this.getInstalledPlugins();\n                        __tombstones = [];\n                        if (installedPlugins.length === 0)\n                            return [2 /*return*/];\n                        _loop_1 = function (installedPlugin) {\n                            var self_1, manifest, allApisDefined, args, filteredArgs;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        if (!installedPlugin.enabled)\n                                            return [2 /*return*/, \"continue\"];\n                                        self_1 = installedPlugin.self, manifest = installedPlugin.manifest;\n                                        allApisDefined = true;\n                                        return [4 /*yield*/, Promise.all(manifest.requestedAPIs.map(function (apiName) { return __awaiter(_this, void 0, void 0, function () {\n                                                return __generator(this, function (_a) {\n                                                    if (this.apiImplementations[apiName]) {\n                                                        return [2 /*return*/, { name: apiName, target: this.apiImplementations[apiName] }];\n                                                    }\n                                                    else {\n                                                        _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error({ message: \"Error loading plugin tombstone \".concat(manifest.id, \", cannot resolve API \").concat(apiName, \" of undefined.\") });\n                                                        _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: \"\\u63D2\\u4EF6\\u300C\".concat(manifest.id, \"\\u300D\\u8BF7\\u6C42\\u4E86\\u4E00\\u4E2A\\u672A\\u5B9A\\u4E49\\u7684API\\u300C\").concat(apiName, \"\\u300D\\uFF0C\\u56E0\\u6B64\\u62D2\\u7EDD\\u8F7D\\u5165\\u6B64\\u63D2\\u4EF6\\u3002\") });\n                                                        allApisDefined = false;\n                                                        return [2 /*return*/, undefined];\n                                                    }\n                                                    return [2 /*return*/];\n                                                });\n                                            }); }))];\n                                    case 1:\n                                        args = _b.sent();\n                                        if (!allApisDefined)\n                                            return [2 /*return*/, \"continue\"];\n                                        filteredArgs = args.filter(function (arg) { return arg !== undefined; });\n                                        if (filteredArgs.length === manifest.requestedAPIs.length) {\n                                            try {\n                                                __tombstones.push({\n                                                    self: self_1,\n                                                    manifest: manifest,\n                                                    args: filteredArgs,\n                                                    executed: false\n                                                });\n                                            }\n                                            catch (error) {\n                                                _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error({ message: \"Error creating plugin tombstone \".concat(manifest.id, \": \").concat(JSON.stringify(error)) });\n                                                _plugins_ACEV2Dialog__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog({\n                                                    title: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'request-reload' }),\n                                                    content: \"\\u63D2\\u4EF6\\u8F7D\\u5165\\u5668\\u5728\\u751F\\u6210\\u63D2\\u4EF6\\u300C\".concat(manifest.id, \"\\u300D\\u7684\\u5893\\u7891\\u4E2D\\u51FA\\u73B0\\u9519\\u8BEF\").concat(error, \"\\uFF0C\\u56E0\\u6B64AcFun Evolved\\u5DF2\\u4E2D\\u6B62\\u8FD0\\u884C\\uFF0C\\u6309\\u4E0B\\u300C\\u597D\\u300D\\u4EE5\\u91CD\\u65B0\\u542F\\u52A8AcFun Evolved.\"),\n                                                    okAction: function () { return location.reload(); }\n                                                });\n                                            }\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        _i = 0, installedPlugins_2 = installedPlugins;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < installedPlugins_2.length)) return [3 /*break*/, 4];\n                        installedPlugin = installedPlugins_2[_i];\n                        return [5 /*yield**/, _loop_1(installedPlugin)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4:\n                        this.tombstones = __tombstones;\n                        return [4 /*yield*/, this.ferryman()];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ;\n    PluginToolkit.prototype.ferryman = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var executeTombstones;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        executeTombstones = function (_a) { return __awaiter(_this, [_a], void 0, function (_b) {\n                            var __tombstones, _i, __tombstones_1, tombstone, self_2, args, manifest, requiredPatterns, isMatch, targetFunction;\n                            var _this = this;\n                            var currentUrl = _b.currentUrl;\n                            return __generator(this, function (_c) {\n                                __tombstones = this.tombstones;\n                                for (_i = 0, __tombstones_1 = __tombstones; _i < __tombstones_1.length; _i++) {\n                                    tombstone = __tombstones_1[_i];\n                                    if (tombstone.executed)\n                                        continue;\n                                    self_2 = tombstone.self, args = tombstone.args, manifest = tombstone.manifest;\n                                    if (manifest.trigger.matches && manifest.trigger.matches.length > 0) {\n                                        requiredPatterns = manifest.trigger.matches.flatMap(function (key) { return _ACEV2URL__WEBPACK_IMPORTED_MODULE_8__.pageList[key] || []; });\n                                        isMatch = requiredPatterns.some(function (pattern) { return pattern.test(currentUrl); });\n                                        if (isMatch) {\n                                            try {\n                                                _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].info({ message: \"executed \".concat(manifest.id) });\n                                                targetFunction = new (Function.bind.apply(Function, __spreadArray(__spreadArray([void 0], args.map(function (arg) { return arg.name; }), false), ['manifest', 'getSelfPreference', self_2], false)))();\n                                                // const targetFunction = new Function(...args.map((arg: any) => arg.name), 'manifest', `(()=>{\"use strict\";(async()=>{console.log('-------------------')})();`);\n                                                targetFunction.apply(void 0, __spreadArray(__spreadArray([], args.map(function (arg) { return arg.target; }), false), [manifest, function (_a) {\n                                                        var manifest = _a.manifest;\n                                                        return _this.getSelfPreference({ manifest: manifest });\n                                                    }], false));\n                                                tombstone.executed = true;\n                                            }\n                                            catch (e) {\n                                                _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error({ message: \"Error ferrying plugin \".concat(manifest.id, \": \").concat(JSON.stringify(e)) });\n                                                _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: \"\\u6446\\u6E21\\u4EBA\\u5728\\u6267\\u884C\\u63D2\\u4EF6\\u300C\".concat(manifest.id, \"\\u300D\\u4E2D\\u51FA\\u73B0\\u9519\\u8BEF\").concat(JSON.stringify(e), \"\\uFF0C\\u56E0\\u6B64\\u5DF2\\u4E2D\\u6B62\\u8FD0\\u884C\\u6B64\\u63D2\\u4EF6\\u3002\") });\n                                            }\n                                        }\n                                    }\n                                }\n                                this.tombstones = __tombstones;\n                                return [2 /*return*/];\n                            });\n                        }); };\n                        return [4 /*yield*/, executeTombstones({ currentUrl: window.location.href })];\n                    case 1:\n                        _a.sent();\n                        _Supervisor__WEBPACK_IMPORTED_MODULE_9__[\"default\"].urlChange(function (currentUrl) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, executeTombstones({ currentUrl: currentUrl })];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ;\n    PluginToolkit.prototype.wakeUpBuildInPlugins = function () {\n        if (_Preferences__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPreference({ category: 'developer', k: 'psv' }) !== 'full') {\n            _plugins_DebugBridge__WEBPACK_IMPORTED_MODULE_11__[\"default\"].wakeUp();\n        }\n        _plugins_PluginStore__WEBPACK_IMPORTED_MODULE_10__[\"default\"].wakeUp();\n    };\n    PluginToolkit.prototype.extractAndInstallPlugin = function (_a) {\n        var _this = this;\n        var compressedData = _a.compressedData;\n        _plugins_ACEV2Dialog__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog({\n            title: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'wants-to-extract-and-install-plugin-package' }) }),\n            content: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'do-you-really-want-to-do-that' }),\n            okAction: function () { return __awaiter(_this, void 0, void 0, function () {\n                var decompressedArrayBuffer, files, rawObject, pack, err_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _plugins_ACEV2Loader__WEBPACK_IMPORTED_MODULE_6__[\"default\"].draw();\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            decompressedArrayBuffer = pako__WEBPACK_IMPORTED_MODULE_12__[\"default\"].inflate(new Uint8Array(compressedData));\n                            if (!decompressedArrayBuffer.buffer) {\n                                _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'decompressed-data-does-not-contain-valid-buffer-property' }) });\n                                return [2 /*return*/];\n                            }\n                            files = (0,untar_js__WEBPACK_IMPORTED_MODULE_13__.untar)(decompressedArrayBuffer.buffer);\n                            if (!files || files.length === 0) {\n                                _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'no-files-extracted-from-the-compressed-data' }) });\n                                return [2 /*return*/];\n                            }\n                            rawObject = files[0];\n                            rawObject = new TextDecoder().decode(rawObject.fileData);\n                            pack = JSON.parse(rawObject);\n                            return [4 /*yield*/, this.installPlugin({ pluginPack: pack, bridged: false })];\n                        case 2:\n                            _a.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            err_1 = _a.sent();\n                            _Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error({ message: \"Error extracting and installing plugin package: \".concat(JSON.stringify(err_1)) });\n                            _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'error-extracting-and-installing-plugin-package' }) });\n                            return [3 /*break*/, 4];\n                        case 4:\n                            _plugins_ACEV2Loader__WEBPACK_IMPORTED_MODULE_6__[\"default\"].destroy();\n                            return [2 /*return*/];\n                    }\n                });\n            }); },\n            cancelAction: function () { return _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: 'canceled' }); }\n        });\n    };\n    ;\n    PluginToolkit.prototype.downloadAndInstallPluginPack = function (_a) {\n        return __awaiter(this, arguments, void 0, function (_b) {\n            var fullDownloadUrl;\n            var _this = this;\n            var manifest = _b.manifest;\n            return __generator(this, function (_c) {\n                fullDownloadUrl = _Variable__WEBPACK_IMPORTED_MODULE_15__[\"default\"].pluginDownloadURL({ manifest: manifest });\n                _plugins_ACEV2Dialog__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog({\n                    title: _Variable__WEBPACK_IMPORTED_MODULE_15__[\"default\"].MASTER_MANIFEST.id + ' ' + _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'wants-to-download-and-install-plugin-package' }),\n                    content: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'download-url' }) + fullDownloadUrl + ' | ' + _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'target-plugin-id' }) + manifest.id,\n                    okAction: function () { return __awaiter(_this, void 0, void 0, function () {\n                        var compressedPack, decompressedContent, files, rawObject, pack, err_2;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    _plugins_ACEV2Loader__WEBPACK_IMPORTED_MODULE_6__[\"default\"].draw();\n                                    return [4 /*yield*/, monkey({\n                                            method: 'GET',\n                                            url: fullDownloadUrl,\n                                            responseType: 'arraybuffer'\n                                        })];\n                                case 1:\n                                    compressedPack = _a.sent();\n                                    _a.label = 2;\n                                case 2:\n                                    _a.trys.push([2, 4, , 6]);\n                                    decompressedContent = pako__WEBPACK_IMPORTED_MODULE_12__[\"default\"].inflate(compressedPack);\n                                    files = (0,untar_js__WEBPACK_IMPORTED_MODULE_13__.untar)(decompressedContent);\n                                    rawObject = files[0];\n                                    rawObject = new TextDecoder().decode(rawObject.fileData);\n                                    pack = JSON.parse(rawObject);\n                                    return [4 /*yield*/, installPlugin(pack)];\n                                case 3:\n                                    _a.sent();\n                                    return [3 /*break*/, 6];\n                                case 4:\n                                    err_2 = _a.sent();\n                                    console.error('解压缩失败', err_2);\n                                    return [4 /*yield*/, openDialog('插件安装器无法解压缩', \"\\u63D2\\u4EF6\\u300C\".concat(bigManifest.id.original, \"\\u300D\\u7684\\u5B89\\u88C5\\u65E0\\u6CD5\\u5B8C\\u6210\\uFF0C\\u56E0\\u4E3A\\u63D2\\u4EF6\\u5B89\\u88C5\\u5668\\u65E0\\u6CD5\\u6210\\u529F\\u89E3\\u538B\\u7F29\\uFF0C\\u8BF7\\u518D\\u8BD5\\u4E00\\u6B21\\u3002\"), true, function () {\n                                        }, function () {\n                                        })];\n                                case 5:\n                                    _a.sent();\n                                    return [3 /*break*/, 6];\n                                case 6:\n                                    _plugins_ACEV2Loader__WEBPACK_IMPORTED_MODULE_6__[\"default\"].destroy();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); },\n                    cancelAction: function () { return _plugins_ACEV2Toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showToast({ text: _I18n__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t({ key: 'canceled' }) }); }\n                });\n                return [2 /*return*/];\n            });\n        });\n    };\n    return PluginToolkit;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new PluginToolkit());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/api/PluginToolkit.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("2da8a98216180e13a2db")
/******/ })();
/******/ 
/******/ }
);